{"ast":null,"code":"import _classCallCheck from \"/home/emmanuel/Documents/go/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/emmanuel/Documents/go/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/emmanuel/Documents/go/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/emmanuel/Documents/go/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/emmanuel/Documents/go/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/emmanuel/Documents/go/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/emmanuel/Documents/go/src/components/modal/AppModal.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\nvar customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n}; // Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\n\nvar AppModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AppModal, _React$Component);\n\n  function AppModal() {\n    var _this;\n\n    _classCallCheck(this, AppModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AppModal).call(this));\n\n    _this.onNameChange = function (e) {\n      _this.setState({\n        turn: e.target.value\n      });\n\n      _this.props.onGetModalData(_this.state.turn);\n    };\n\n    _this.onPriceChange = function (e) {\n      _this.setState({\n        price: e.target.value\n      });\n    };\n\n    _this.state = {\n      modalIsOpen: false,\n      turn: '',\n      price: ''\n    };\n    _this.openModal = _this.openModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.afterOpenModal = _this.afterOpenModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.closeModal = _this.closeModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AppModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      Modal.setAppElement('body');\n    }\n  }, {\n    key: \"openModal\",\n    value: function openModal() {\n      this.setState({\n        modalIsOpen: true\n      });\n    }\n  }, {\n    key: \"afterOpenModal\",\n    value: function afterOpenModal() {\n      // references are now sync'd and can be accessed.\n      this.subtitle.style.color = '#f00';\n    }\n  }, {\n    key: \"closeModal\",\n    value: function closeModal() {\n      this.setState({\n        modalIsOpen: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.openModal,\n        className: \"b ph3 pv2 input-reset ba b--white bg-transparent grow pointer white f6 dib\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"+\"), React.createElement(Modal, {\n        isOpen: this.state.modalIsOpen,\n        onAfterOpen: this.afterOpenModal,\n        onRequestClose: this.closeModal,\n        style: customStyles,\n        contentLabel: \"Example Modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        ref: function ref(subtitle) {\n          return _this2.subtitle = subtitle;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Add New Turn\"), React.createElement(\"button\", {\n        onClick: this.props.onAddTurns,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"close\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"input\", {\n        onChange: this.onNameChange,\n        type: \"text\",\n        className: \"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Price\"), React.createElement(\"input\", {\n        onChange: this.onPriceChange,\n        type: \"text\",\n        className: \"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return AppModal;\n}(React.Component);\n\nexport default AppModal;","map":{"version":3,"sources":["/home/emmanuel/Documents/go/src/components/modal/AppModal.js"],"names":["React","ReactDOM","Modal","customStyles","content","top","left","right","bottom","marginRight","transform","AppModal","onNameChange","e","setState","turn","target","value","props","onGetModalData","state","onPriceChange","price","modalIsOpen","openModal","bind","afterOpenModal","closeModal","setAppElement","subtitle","style","color","onAddTurns","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\n\n\nconst customStyles = {\n  content : {\n    top                   : '50%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)'\n  }\n};\n \n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\n \nclass AppModal  extends React.Component {\n  constructor() {\n    super();\n \n    this.state = {\n      modalIsOpen: false,\n      turn: '',\n      price: ''\n    };\n \n    this.openModal = this.openModal.bind(this);\n    this.afterOpenModal = this.afterOpenModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  onNameChange = (e) =>{\n    this.setState({turn: e.target.value})\n    this.props.onGetModalData(this.state.turn)\n  }\n\n  onPriceChange = (e) =>{\n    this.setState({price: e.target.value})\n  }\n\n\n  componentDidMount(){\n        Modal.setAppElement('body');\n  }\n\n \n  openModal() {\n    this.setState({modalIsOpen: true});\n  }\n \n  afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    this.subtitle.style.color = '#f00';\n  }\n \n  closeModal() {\n    this.setState({modalIsOpen: false});\n  }\n \n  render() {\n    return (\n      <div>\n        <button onClick={this.openModal} className = 'b ph3 pv2 input-reset ba b--white bg-transparent grow pointer white f6 dib'>+</button>\n        <Modal \n          isOpen={this.state.modalIsOpen}\n          onAfterOpen={this.afterOpenModal}\n          onRequestClose={this.closeModal}\n          style={customStyles}\n          contentLabel=\"Example Modal\"\n        >\n \n          <h2 ref={subtitle => this.subtitle = subtitle}>Add New Turn</h2>\n          <button onClick={this.props.onAddTurns}>close</button>\n         <div>\n           <label>Name</label>\n           <input \n               onChange = {this.onNameChange}\n               type = 'text' \n               className=\"b pa2 input-reset ba bg-transparent\n                hover-bg-black hover-white w-50\"/>\n           <label>Price</label>\n           <input\n                onChange = {this.onPriceChange}\n                type = 'text'   \n                className=\"b pa2 input-reset ba bg-transparent\n                hover-bg-black hover-white w-50\" />\n         </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default AppModal; "]},"metadata":{},"sourceType":"module"}