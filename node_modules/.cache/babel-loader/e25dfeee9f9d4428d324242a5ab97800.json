{"ast":null,"code":"import _classCallCheck from \"/home/emmanuel/Documents/go/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/emmanuel/Documents/go/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/emmanuel/Documents/go/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/emmanuel/Documents/go/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/emmanuel/Documents/go/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/emmanuel/Documents/go/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/emmanuel/Documents/go/src/components/modal/AppModal.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\nimport './appmodal.css';\nvar customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n}; // Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\n\nvar AppModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AppModal, _React$Component);\n\n  function AppModal() {\n    var _this;\n\n    _classCallCheck(this, AppModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AppModal).call(this));\n\n    _this.onPriceChange = function (e) {\n      _this.setState({\n        price: e.target.value\n      });\n    };\n\n    _this.state = {\n      modalIsOpen: false,\n      turn: '',\n      price: ''\n    };\n    _this.openModal = _this.openModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.afterOpenModal = _this.afterOpenModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.closeModal = _this.closeModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AppModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      Modal.setAppElement('body');\n    }\n  }, {\n    key: \"openModal\",\n    value: function openModal() {\n      this.setState({\n        modalIsOpen: true\n      });\n    }\n  }, {\n    key: \"afterOpenModal\",\n    value: function afterOpenModal() {\n      // references are now sync'd and can be accessed.\n      this.subtitle.style.color = '#f00';\n    }\n  }, {\n    key: \"closeModal\",\n    value: function closeModal() {\n      this.setState({\n        modalIsOpen: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props.info);\n      var onNameChange = this.props.onNameChange;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.openModal,\n        className: \"b ph3 pv2 input-reset ba b--white bg-transparent grow pointer white f6 dib\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"+\"), React.createElement(Modal, {\n        isOpen: this.state.modalIsOpen,\n        onAfterOpen: this.afterOpenModal,\n        onRequestClose: this.closeModal,\n        style: customStyles,\n        contentLabel: \"Example Modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        ref: function ref(subtitle) {\n          return _this2.subtitle = subtitle;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Add New Turn\"), React.createElement(\"button\", {\n        onClick: this.props.onAddTurns,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Add\"), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"input\", {\n        onChange: onNameChange,\n        placeholder: \"Enter Name\",\n        type: \"text\",\n        className: \"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Price\"), React.createElement(\"input\", {\n        onChange: this.onPriceChange,\n        type: \"text\",\n        className: \"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, this.props.info.map(function (info, i) {\n        return React.createElement(\"input\", {\n          type: \"radio\",\n          value: info.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, info.name);\n      })))));\n    }\n  }]);\n\n  return AppModal;\n}(React.Component);\n\nexport default AppModal;","map":{"version":3,"sources":["/home/emmanuel/Documents/go/src/components/modal/AppModal.js"],"names":["React","ReactDOM","Modal","customStyles","content","top","left","right","bottom","marginRight","transform","AppModal","onPriceChange","e","setState","price","target","value","state","modalIsOpen","turn","openModal","bind","afterOpenModal","closeModal","setAppElement","subtitle","style","color","console","log","props","info","onNameChange","onAddTurns","map","i","name","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\nimport './appmodal.css';\n\n\nconst customStyles = {\n  content : {\n    top                   : '50%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)'\n  }\n};\n \n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\n \nclass AppModal  extends React.Component {\n  constructor() {\n    super();\n \n    this.state = {\n      modalIsOpen: false,\n      turn: '',\n      price: ''\n    };\n    this.openModal = this.openModal.bind(this);\n    this.afterOpenModal = this.afterOpenModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n\n\n  onPriceChange = (e) =>{\n    this.setState({price: e.target.value})\n  }\n\n\n  componentDidMount(){\n        Modal.setAppElement('body');\n  }\n\n \n  openModal() {\n    this.setState({modalIsOpen: true});\n  }\n \n  afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    this.subtitle.style.color = '#f00';\n  }\n \n  closeModal() {\n    this.setState({modalIsOpen: false});\n  }\n \n  render() {\n       console.log(this.props.info)\n       const{ onNameChange } = this.props; \n    return (\n      <div>\n        <button onClick={this.openModal} className = 'b ph3 pv2 input-reset ba b--white bg-transparent grow pointer white f6 dib'>+</button>\n        <Modal \n          \n          isOpen={this.state.modalIsOpen}\n          onAfterOpen={this.afterOpenModal}\n          onRequestClose={this.closeModal}\n          style={customStyles}\n          contentLabel=\"Example Modal\"\n        >\n \n          <h2 ref={subtitle => this.subtitle = subtitle}>Add New Turn</h2>\n          <button onClick={this.props.onAddTurns}>Add</button>\n         <div className = 'content'>\n           <label>Name</label>\n           <input \n               onChange = {onNameChange}\n               placeholder = 'Enter Name'\n               type = 'text' \n               className=\"b pa2 input-reset ba bg-transparent\n                hover-bg-black hover-white w-50\"/>\n           <label>Price</label>\n           <input\n                onChange = {this.onPriceChange}\n                type = 'text'   \n                className=\"b pa2 input-reset ba bg-transparent\n                hover-bg-black hover-white w-50\" />\n\n                <div>\n                  {this.props.info.map((info, i) =>{\n                    return <input type='radio' value = {info.name} >{info.name}</input>\n                  })}\n                </div>\n         </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default AppModal; "]},"metadata":{},"sourceType":"module"}